SIMBOLOGIA

igualdade == (sempre dois, = é apenas para atribuição);
diferença !=
maior >
maior igual >=
menor <
menor igual <=

Ex:
i1 == i2
i1 != i2
i1 > i2
i1 <= i2

OPERADORES LOGICOS

simbolos especiais capazes de realizar operações logicas ou expressoes e retornar um resultado

* conjunção - ambos os operadores ou expressoes sao verdade (&&, and);
* disjuncao - ambos os operadores ou expressoes sao falsas (||, or);
* disjuncao exclusiva - ambos os operadores ou expressoes sao opostos (^, xor)
* negacao - inverte o valor logico de um operando ou expressao (!, inverção)

QUANDO UTILIZAR?

depende do tipo de decisão a ser tomada

* operador bitwise - & e |, mexe com bits de números inteiros, não são operadores lógicos;
* operadores shift: ~, >>, >>>, <<, invertem o número, rara utilização

BOA PRÁTICAS

crie variaveis euxiliare para guardar resultados intermediarios

(salarioMensal < mediaSalario) && (quantidadeDependentes >= mediaDependentes)

pode ser 

(salarioBaixo) && (MuitosDependentes)

boolean recebeAuxilio = (salarioBaixo) && (muitosDependentes)

EXERCITANDO

crie um projeto simples codificando os exemplos dos slides anterior, utilizando operandos e expressões

CONTROLE DE FLUXO

estruturas que tem a capacidade de direcionar o fluxo de execução do código

* decisão - if(se), if-else, if-else-if, switch(escolha) e operador ternário (avalia uma condição booleana ou variavel para direcionar o fluxo de execução)

Código > se (true) > fim

	(false)	
	  |
	fim

Ex:
//
if(idade>18){
}
//
if(aprovado){
}else{
}
//
if(casado && temFilhos){
}else if (casado && semFilhos){
}else{
}
//

operador ternario

condicao = true - exp1
	 = false - exp2

Ex: (evitar de usar)
//
condição ? true : false;	condição ? true : null;

ligado ? desligar : ligar;	emMovimento ? freia : null;
//

escolha - switch

código - variavel - caso1 - true
		  - false - caso2

Ex:
//
byte	case 1:
short	break;
char	case ...:
int	break;
Enum	default;
String	break;
// 

* repeticao - for, while, do while
* interrupção - break, continue e return

BOAS PRATICAS

* switch é para valores exatos e if para expressões booleanas;
* evitar usar o default do switch para "cases genericos";
* evitar o efeito if's aninhados;
* usar a boa pratica da aula 2 para diminuir o tamanho do if.

EXERCITANDO 

crie um simples projeto com variaveis e expressoes para usar nas estruturas if e switch
com if, exiba o nome do mês do ano de acordo com seu numero.
evite o efeito "flecha". faça também outro if que verifique se o mês é julho, dezembro ou janeiro, para assim exibir o texto "Férias.

com switch use String para a partir do dia da semana, exibir seu número. Ainda, fazer outro exemplo onde, se uma variavel interia for entre 1 e 3, exibir o texto "certo". Se for 4 exibir "errado", se for 5 "talvez", para demais valores exibir "valor indefinido".

BLOCOS

é um grupo de 0 ou mais códigos quais trabalham em conjunto para executar uma operação

* Locais - dentro de métodos; { ... }
* Estáticos - dentro de classes; 
* Instância - dentro de classes;












































